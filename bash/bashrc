# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# some environment defaults
EMAIL="Andrew Thompson <andrew@tobarja.com>"
EDITOR="vi"

# Add `~/bin` to the `$PATH`
export PATH="$HOME/bin:$HOME/.local/bin:$HOME/bin/go/bin:$PATH"

# Prefer US English and use UTF-8
export LC_ALL="en_US.UTF-8"
export LANG="en_US"

export GOROOT=$HOME/bin/go
export GOPATH=$HOME/code/go

#this is for rvm
test -h ~/.bash_profile || echo "~/.bash_profile is not a symlink"
test -h ~/.bashrc || echo "~/.bashrc is not a symlink"

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=10000

# Stolen from...
# llandero (March 12th, 2014) - Add Date And Time To Bash History
export HISTTIMEFORMAT="%h/%d - %H:%M:%S "

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
    xterm-256color) color_prompt=yes;;
    screen) color_prompt=yes;;
    screen-256color) color_prompt=yes;;
esac

if [ -n "$DISPLAY" -a "$TERM" == "xterm" ]; then
    export TERM=xterm-256color
    color_prompt=yes
fi

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
# We have color support; assume it's compliant with Ecma-48
# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

function __gitprompt()
{
    GIT_BRANCH=`git rev-parse --abbrev-ref HEAD 2>/dev/null`
    if [ $? -eq 0 ]; then
        git status | grep "nothing to commit" > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            GIT_PROMPT=" $Green($GIT_BRANCH)$Color_Off"
        else
            GIT_PROMPT=" $Red{$GIT_BRANCH}$Color_Off"
        fi
        echo "$GIT_PROMPT"
    fi
}

function set_color_prompt()
{
    PS1="${debian_chroot:+($debian_chroot)}$BGreen\u@\h$Color_Off:$BWhite$PathShort$(__gitprompt)$Color_Off$NewLine\$ "
}

if [ "$color_prompt" = yes ]; then
    PROMPT_COMMAND=set_color_prompt
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h$NewLine$PathShort\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
if [ -f ~/.aliases ]; then
    . ~/.aliases
fi

# capture my SSH_AUTH for use in screen/tmux
if [[ "$STY" || "$TMUX" ]]; then
    if [[ -f ~/.sshauth-$HOSTNAME && -s ~/.sshauth-$HOSTNAME ]]; then
        export `cat ~/.sshauth-$HOSTNAME`
    fi
else
    env | grep '^SSH_AUTH_SOCK' >~/.sshauth-$HOSTNAME
fi

# If possible, add tab completion for many more commands
#[ -f /etc/bash_completion ] && source /etc/bash_completion
if [ -f /etc/bash_completion ]; then
    if [ -f /etc/lsb-release ]; then
        DISTRIB_CODENAME=`grep "DISTRIB_CODENAME" /etc/lsb-release | cut -d = -f 2`
        case "$DISTRIB_CODENAME" in
            lucid);;
            precise);;
            *) source /etc/bash_completion ;;
        esac
        unset DISTRIB_CODENAME
    fi
fi

test -x /usr/bin/setxkbmap && /usr/bin/setxkbmap -option "ctrl:nocaps"
bind -r '\C-s'
stty -ixon
stty stop undef

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*
